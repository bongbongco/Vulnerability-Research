int __userpurge sub_7455EC39@<eax>(unsigned __int16 *a1@<eax>, int a2, __int16 a3)
{
  unsigned __int16 *v3; // edi
  int v4; // ebx
  unsigned int v5; // eax
  int v6; // esi
  int v8; // eax
  int v9; // esi
  double v10; // st7
  double v11; // st7
  unsigned int *v12; // ebx
  unsigned int v13; // eax
  unsigned int v14; // ecx
  int v15; // eax
  int v16; // ecx
  signed int v17; // [esp+0h] [ebp-60h]
  int v18; // [esp+Ch] [ebp-54h]
  int v19; // [esp+10h] [ebp-50h]
  int v20; // [esp+14h] [ebp-4Ch]
  int v21; // [esp+18h] [ebp-48h]
  unsigned int v22; // [esp+20h] [ebp-40h]
  int v23; // [esp+24h] [ebp-3Ch]
  int v24; // [esp+2Ch] [ebp-34h]
  int v25; // [esp+30h] [ebp-30h]
  int v26; // [esp+34h] [ebp-2Ch]
  __int16 v27; // [esp+38h] [ebp-28h]
  unsigned __int16 v28; // [esp+3Ah] [ebp-26h]
  int v29; // [esp+3Ch] [ebp-24h]
  int v30; // [esp+40h] [ebp-20h]
  unsigned __int16 v31; // [esp+44h] [ebp-1Ch]
  unsigned __int16 v32; // [esp+46h] [ebp-1Ah]

  v3 = a1;
  v4 = *a1;
  v24 = 0;
  v26 = v4;
  if ( v4 == 65534 )
  {
    v26 = *((_DWORD *)a1 + 6);
    v4 = v26;
  }
  v27 = 1;
  v28 = a1[1];
  v29 = *((_DWORD *)a1 + 1);
  if ( (v4 == 1 || v4 == 3) && ((v5 = a1[7], v5 <= 0x20) || v4 == 3 && v5 == 64) )
  {
    sub_7455B840(v22, v23);
    if ( !*((_DWORD *)v3 + 2) )
      return 0;
    v8 = 8 * v3[6] / v3[1];
    if ( v8 >= 16 )
      LOWORD(v8) = 16;
    v32 = v8;
    sub_7455B840(v22, v23);
  }
  else
  {
    v32 = 16;
    if ( a3 & 2 )
      v28 = 1;
    sub_7455B840(v22, v23);
    sub_7454473F();
    v6 = sub_7459002C(&v24, 0, v3, &v27, 0, 0, 0, 4);
    sub_7454474B();
    if ( v6 )
      return 0;
  }
  v9 = sub_7454108F(176);
  *(_DWORD *)v9 = a2;
  *(_DWORD *)(v9 + 4) = v4;
  *(_DWORD *)(v9 + 16) = v3[6];
  if ( v4 == 2 || v4 == 17 )
  {
    v25 = v3[9];
    v11 = (double)v25;
    v25 = v31;
    v25 = v3[6];
    v10 = v11 * (double)v31 / (double)v25;
  }
  else
  {
    v10 = (double)v30 / (double)*((signed int *)v3 + 2);
  }
  *(double *)(v9 + 24) = v10;
  if ( a3 & 0x100 )
  {
    v25 = 32 / v32;
    *(double *)(v9 + 24) = (double)v25 * *(double *)(v9 + 24);
    v27 = 3;
    v32 = 32;
    sub_7455B840(v22, v23);
  }
  if ( v24 )
  {
    v12 = (unsigned int *)(v9 + 160);
    v21 = v9 + 160;
    v20 = v30;
    v19 = v24;
    v25 = v30;
    if ( sub_74590021() || (v13 = v22, *v12 > v22) )
    {
      v18 = 0;
      *v12 = *((_DWORD *)v3 + 2);
      v17 = 1;
      sub_74590021();
      v13 = v19;
    }
    if ( v20 == 85 && *((_DWORD *)v3 + 2) <= 0x3E8u )
      *v12 *= 4;
    v14 = *v12;
    *(_DWORD *)(v9 + 92) = *v12;
    *(_DWORD *)(v9 + 76) = 84;
    *(_DWORD *)(v9 + 108) = v13;
    v15 = sub_7454106E(v13 + v14);
    v16 = v15 + *(_DWORD *)(v9 + 92);
    *(_DWORD *)(v9 + 88) = v15;
    *(_DWORD *)(v9 + 104) = v16;
    off_745680CC(v18, v9 + 76, 0);
    *(_DWORD *)(v9 + 72) = v17;
  }
  *(_DWORD *)(v9 + 12) = (unsigned int)HIWORD(v21) >> 3;
  *(_DWORD *)(v9 + 8) = HIWORD(v18);
  return v9;
}
